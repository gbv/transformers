<?xml version="1.0" encoding="UTF-8"?>
<project name="marcxml2mods">

    <property name="script" value="marcxml2mods-gbv.xsl"/>
    <property name="merged" value="marcxml2mods.xsl"/>
    <property name="schema" value="schemas/mods-3-6.xsd"/>

    <!-- additional tasks from ant-contrib and ant-schematron -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <!-- Schematron requires Saxon. FIXME! -->
    <taskdef name="schematron"
        classname="com.schematron.ant.SchematronTask"
        classpath="lib/ant-schematron.jar;lib/saxon9-dom.jar;lib/saxon9.jar;lib/saxon-jdom.jar" />

    <target name="test">
        <for param="marcfile">
            <fileset dir="test/">
                <filename name="*.in.xml"/>
            </fileset>
            <sequential>
                <propertyregex override="yes"
                    property="modsfile"  input="@{marcfile}"
                    regexp="(.+)\.in\.xml" replace="\1.mods.xml"/>

                <echo>Transforming @{marcfile} to ${modsfile}</echo>
                <xslt in="@{marcfile}" out="${modsfile}" style="${script}"/>

                <!-- output must be valid MODS -->
                <schemavalidate file="${modsfile}"/>

                <propertyregex override="yes"
                    property="schematronfile"  input="@{marcfile}"
                    regexp="(.+)\.in\.xml" replace="\1.schematron.xml"/>
                <if>
                    <available file="${schematronfile}"/>
                    <then>
                        <echo>Additional constraints ${schematronfile}</echo>
                        <schematron schema="${schematronfile}" file="${modsfile}" />
                        <fail message="some schematron asserts failed">
                            <condition>
                                <resourcecontains resource="result.xml" substring="failed-assert"/>
                            </condition>
                        </fail>
                    </then>
                </if>
            </sequential>
        </for>
    </target>

    <target name="clean">
        <echo>Removing test/*.mods.xml</echo>
        <delete file="result.xml">
            <fileset dir="test" includes="*.mods.xml" />
        </delete>
    </target>

    <target name="merged">
        <echo>merging xsl files to one</echo>
        <xslt in="${script}" out="${merged}" style="../mergeIncludes.xsl"/>
    </target>

</project>
